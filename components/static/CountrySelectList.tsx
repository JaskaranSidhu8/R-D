// Dependencies: pnpm install lucide-react

"use client";

import { Label } from "@/components/ui/label";
import { Check, ChevronDown } from "lucide-react";
import { Fragment, useState } from "react";

import { Button } from "@/components/ui/button";
import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
} from "@/components/ui/command";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";

const countries = [
  {
    continent: "Europe",
    items: [
      { value: "United Kingdom", flag: "ğŸ‡¬ğŸ‡§" },
      { value: "France", flag: "ğŸ‡«ğŸ‡·" },
      { value: "Germany", flag: "ğŸ‡©ğŸ‡ª" },
      { value: "Albania", flag: "ğŸ‡¦ğŸ‡±" },
      { value: "Andorra", flag: "ğŸ‡¦ğŸ‡©" },
      { value: "Armenia", flag: "ğŸ‡¦ğŸ‡²" },
      { value: "Austria", flag: "ğŸ‡¦ğŸ‡¹" },
      { value: "Azerbaijan", flag: "ğŸ‡¦ğŸ‡¿" },
      { value: "Belarus", flag: "ğŸ‡§ğŸ‡¾" },
      { value: "Belgium", flag: "ğŸ‡§ğŸ‡ª" },
      { value: "Bosnia and Herzegovina", flag: "ğŸ‡§ğŸ‡¦" },
      { value: "Bulgaria", flag: "ğŸ‡§ğŸ‡¬" },
      { value: "Croatia", flag: "ğŸ‡­ğŸ‡·" },
      { value: "Cyprus", flag: "ğŸ‡¨ğŸ‡¾" },
      { value: "Czech Republic", flag: "ğŸ‡¨ğŸ‡¿" },
      { value: "Denmark", flag: "ğŸ‡©ğŸ‡°" },
      { value: "Estonia", flag: "ğŸ‡ªğŸ‡ª" },
      { value: "Finland", flag: "ğŸ‡«ğŸ‡®" },
      { value: "Georgia", flag: "ğŸ‡¬ğŸ‡ª" },
      { value: "Greece", flag: "ğŸ‡¬ğŸ‡·" },
      { value: "Hungary", flag: "ğŸ‡­ğŸ‡º" },
      { value: "Iceland", flag: "ğŸ‡®ğŸ‡¸" },
      { value: "Ireland", flag: "ğŸ‡®ğŸ‡ª" },
      { value: "Italy", flag: "ğŸ‡®ğŸ‡¹" },
      { value: "Kazakhstan", flag: "ğŸ‡°ğŸ‡¿" },
      { value: "Kosovo", flag: "ğŸ‡½ğŸ‡°" },
      { value: "Latvia", flag: "ğŸ‡±ğŸ‡»" },
      { value: "Liechtenstein", flag: "ğŸ‡±ğŸ‡®" },
      { value: "Lithuania", flag: "ğŸ‡±ğŸ‡¹" },
      { value: "Luxembourg", flag: "ğŸ‡±ğŸ‡º" },
      { value: "Malta", flag: "ğŸ‡²ğŸ‡¹" },
      { value: "Moldova", flag: "ğŸ‡²ğŸ‡©" },
      { value: "Monaco", flag: "ğŸ‡²ğŸ‡¨" },
      { value: "Montenegro", flag: "ğŸ‡²ğŸ‡ª" },
      { value: "Netherlands", flag: "ğŸ‡³ğŸ‡±" },
      { value: "North Macedonia", flag: "ğŸ‡²ğŸ‡°" },
      { value: "Norway", flag: "ğŸ‡³ğŸ‡´" },
      { value: "Poland", flag: "ğŸ‡µğŸ‡±" },
      { value: "Portugal", flag: "ğŸ‡µğŸ‡¹" },
      { value: "Romania", flag: "ğŸ‡·ğŸ‡´" },
      { value: "Russia", flag: "ğŸ‡·ğŸ‡º" },
      { value: "San Marino", flag: "ğŸ‡¸ğŸ‡²" },
      { value: "Serbia", flag: "ğŸ‡·ğŸ‡¸" },
      { value: "Slovakia", flag: "ğŸ‡¸ğŸ‡°" },
      { value: "Slovenia", flag: "ğŸ‡¸ğŸ‡®" },
      { value: "Spain", flag: "ğŸ‡ªğŸ‡¸" },
      { value: "Sweden", flag: "ğŸ‡¸ğŸ‡ª" },
      { value: "Switzerland", flag: "ğŸ‡¨ğŸ‡­" },
      { value: "Turkey", flag: "ğŸ‡¹ğŸ‡·" },
      { value: "Ukraine", flag: "ğŸ‡ºğŸ‡¦" },
      { value: "Vatican City", flag: "ğŸ‡»ğŸ‡¦" },
    ],
  },
  {
    continent: "America",
    items: [
      { value: "United States", flag: "ğŸ‡ºğŸ‡¸" },
      { value: "Canada", flag: "ğŸ‡¨ğŸ‡¦" },
      { value: "Mexico", flag: "ğŸ‡²ğŸ‡½" },
      { value: "Antigua and Barbuda", flag: "ğŸ‡¦ğŸ‡¬" },
      { value: "Bahamas", flag: "ğŸ‡§ğŸ‡¸" },
      { value: "Barbados", flag: "ğŸ‡§ğŸ‡§" },
      { value: "Belize", flag: "ğŸ‡§ğŸ‡¿" },
      { value: "Bolivia", flag: "ğŸ‡§ğŸ‡´" },
      { value: "Brazil", flag: "ğŸ‡§ğŸ‡·" },
      { value: "Chile", flag: "ğŸ‡¨ğŸ‡±" },
      { value: "Colombia", flag: "ğŸ‡¨ğŸ‡´" },
      { value: "Costa Rica", flag: "ğŸ‡¨ğŸ‡·" },
      { value: "Cuba", flag: "ğŸ‡¨ğŸ‡º" },
      { value: "Dominica", flag: "ğŸ‡©ğŸ‡²" },
      { value: "Dominican Republic", flag: "ğŸ‡©ğŸ‡´" },
      { value: "Ecuador", flag: "ğŸ‡ªğŸ‡¨" },
      { value: "El Salvador", flag: "ğŸ‡¸ğŸ‡»" },
      { value: "Grenada", flag: "ğŸ‡¬ğŸ‡©" },
      { value: "Guatemala", flag: "ğŸ‡¬ğŸ‡¹" },
      { value: "Guyana", flag: "ğŸ‡¬ğŸ‡¾" },
      { value: "Haiti", flag: "ğŸ‡­ğŸ‡¹" },
      { value: "Honduras", flag: "ğŸ‡­ğŸ‡³" },
      { value: "Jamaica", flag: "ğŸ‡¯ğŸ‡²" },
      { value: "Panama", flag: "ğŸ‡µğŸ‡¦" },
      { value: "Paraguay", flag: "ğŸ‡µğŸ‡¾" },
      { value: "Peru", flag: "ğŸ‡µğŸ‡ª" },
      { value: "Saint Kitts and Nevis", flag: "ğŸ‡°ğŸ‡³" },
      { value: "Saint Lucia", flag: "ğŸ‡±ğŸ‡¨" },
      { value: "Saint Vincent and the Grenadines", flag: "ğŸ‡»ğŸ‡¨" },
      { value: "Suriname", flag: "ğŸ‡¸ğŸ‡·" },
      { value: "Trinidad and Tobago", flag: "ğŸ‡¹ğŸ‡¹" },
      { value: "Uruguay", flag: "ğŸ‡ºğŸ‡¾" },
      { value: "Venezuela", flag: "ğŸ‡»ğŸ‡ª" },
    ],
  },
  {
    continent: "Africa",
    items: [
      { value: "South Africa", flag: "ğŸ‡¿ğŸ‡¦" },
      { value: "Nigeria", flag: "ğŸ‡³ğŸ‡¬" },
      { value: "Morocco", flag: "ğŸ‡²ğŸ‡¦" },
      { value: "Algeria", flag: "ğŸ‡©ğŸ‡¿" },
      { value: "Angola", flag: "ğŸ‡¦ğŸ‡´" },
      { value: "Benin", flag: "ğŸ‡§ğŸ‡¯" },
      { value: "Botswana", flag: "ğŸ‡§ğŸ‡¼" },
      { value: "Burkina Faso", flag: "ğŸ‡§ğŸ‡«" },
      { value: "Burundi", flag: "ğŸ‡§ğŸ‡®" },
      { value: "Cape Verde", flag: "ğŸ‡¨ğŸ‡»" },
      { value: "Cameroon", flag: "ğŸ‡¨ğŸ‡²" },
      { value: "Central African Republic", flag: "ğŸ‡¨ğŸ‡«" },
      { value: "Chad", flag: "ğŸ‡¹ğŸ‡©" },
      { value: "Comoros", flag: "ğŸ‡°ğŸ‡²" },
      { value: "Congo (Republic of the Congo)", flag: "ğŸ‡¨ğŸ‡¬" },
      { value: "Congo (Democratic Republic of the Congo)", flag: "ğŸ‡¨ğŸ‡©" },
      { value: "Djibouti", flag: "ğŸ‡©ğŸ‡¯" },
      { value: "Egypt", flag: "ğŸ‡ªğŸ‡¬" },
      { value: "Equatorial Guinea", flag: "ğŸ‡¬ğŸ‡¶" },
      { value: "Eritrea", flag: "ğŸ‡ªğŸ‡·" },
      { value: "Eswatini", flag: "ğŸ‡¸ğŸ‡¿" },
      { value: "Ethiopia", flag: "ğŸ‡ªğŸ‡¹" },
      { value: "Gabon", flag: "ğŸ‡¬ğŸ‡¦" },
      { value: "Gambia", flag: "ğŸ‡¬ğŸ‡²" },
      { value: "Ghana", flag: "ğŸ‡¬ğŸ‡­" },
      { value: "Guinea", flag: "ğŸ‡¬ğŸ‡³" },
      { value: "Guinea-Bissau", flag: "ğŸ‡¬ğŸ‡¼" },
      { value: "Ivory Coast (CÃ´te d'Ivoire)", flag: "ğŸ‡¨ğŸ‡®" },
      { value: "Kenya", flag: "ğŸ‡°ğŸ‡ª" },
      { value: "Lesotho", flag: "ğŸ‡±ğŸ‡¸" },
      { value: "Liberia", flag: "ğŸ‡±ğŸ‡¸" },
      { value: "Libya", flag: "ğŸ‡±ğŸ‡¾" },
      { value: "Madagascar", flag: "ğŸ‡²ğŸ‡¬" },
      { value: "Malawi", flag: "ğŸ‡²ğŸ‡¼" },
      { value: "Mali", flag: "ğŸ‡²ğŸ‡±" },
      { value: "Mauritania", flag: "ğŸ‡²ğŸ‡·" },
      { value: "Mauritius", flag: "ğŸ‡²ğŸ‡º" },
      { value: "Morocco", flag: "ğŸ‡²ğŸ‡¦" },
      { value: "Mozambique", flag: "ğŸ‡²ğŸ‡¿" },
      { value: "Namibia", flag: "ğŸ‡³ğŸ‡¦" },
      { value: "Niger", flag: "ğŸ‡³ğŸ‡ª" },
      { value: "Rwanda", flag: "ğŸ‡·ğŸ‡¼" },
      { value: "SÃ£o TomÃ© and PrÃ­ncipe", flag: "ğŸ‡¸ğŸ‡¹" },
      { value: "Senegal", flag: "ğŸ‡¸ğŸ‡³" },
      { value: "Seychelles", flag: "ğŸ‡¸ğŸ‡¨" },
      { value: "Sierra Leone", flag: "ğŸ‡¸ğŸ‡±" },
      { value: "Somalia", flag: "ğŸ‡¸ğŸ‡´" },
      { value: "South Sudan", flag: "ğŸ‡¸ğŸ‡¸" },
      { value: "Sudan", flag: "ğŸ‡¸ğŸ‡©" },
      { value: "Togo", flag: "ğŸ‡¹ğŸ‡¬" },
      { value: "Tunisia", flag: "ğŸ‡¹ğŸ‡³" },
      { value: "Uganda", flag: "ğŸ‡ºğŸ‡¬" },
      { value: "Zambia", flag: "ğŸ‡¿ğŸ‡²" },
      { value: "Zimbabwe", flag: "ğŸ‡¿ğŸ‡¼" },
    ],
  },
  {
    continent: "Asia",
    items: [
      { value: "China", flag: "ğŸ‡¨ğŸ‡³" },
      { value: "Japan", flag: "ğŸ‡¯ğŸ‡µ" },
      { value: "India", flag: "ğŸ‡®ğŸ‡³" },
      { value: "Afghanistan", flag: "ğŸ‡¦ğŸ‡«" },
      { value: "Armenia", flag: "ğŸ‡¦ğŸ‡²" },
      { value: "Azerbaijan", flag: "ğŸ‡¦ğŸ‡¿" },
      { value: "Bahrain", flag: "ğŸ‡§ğŸ‡­" },
      { value: "Bangladesh", flag: "ğŸ‡§ğŸ‡©" },
      { value: "Bhutan", flag: "ğŸ‡§ğŸ‡¹" },
      { value: "Brunei", flag: "ğŸ‡§ğŸ‡³" },
      { value: "Cambodia", flag: "ğŸ‡°ğŸ‡­" },
      { value: "Cyprus", flag: "ğŸ‡¨ğŸ‡¾" },
      { value: "Georgia", flag: "ğŸ‡¬ğŸ‡ª" },
      { value: "Indonesia", flag: "ğŸ‡®ğŸ‡©" },
      { value: "Iraq", flag: "ğŸ‡®ğŸ‡¶" },
      { value: "Israel", flag: "ğŸ‡®ğŸ‡±" },
      { value: "Jordan", flag: "ğŸ‡¯ğŸ‡´" },
      { value: "Kazakhstan", flag: "ğŸ‡°ğŸ‡¿" },
      { value: "Kuwait", flag: "ğŸ‡°ğŸ‡¼" },
      { value: "Kyrgyzstan", flag: "ğŸ‡°ğŸ‡¬" },
      { value: "Laos", flag: "ğŸ‡±ğŸ‡¦" },
      { value: "Lebanon", flag: "ğŸ‡±ğŸ‡§" },
      { value: "Malaysia", flag: "ğŸ‡²ğŸ‡¾" },
      { value: "Maldives", flag: "ğŸ‡²ğŸ‡»" },
      { value: "Mongolia", flag: "ğŸ‡²ğŸ‡³" },
      { value: "Myanmar", flag: "ğŸ‡²ğŸ‡²" },
      { value: "Nepal", flag: "ğŸ‡³ğŸ‡µ" },
      { value: "North Korea", flag: "ğŸ‡°ğŸ‡µ" },
      { value: "Oman", flag: "ğŸ‡´ğŸ‡²" },
      { value: "Pakistan", flag: "ğŸ‡µğŸ‡°" },
      { value: "Philippines", flag: "ğŸ‡µğŸ‡­" },
      { value: "Qatar", flag: "ğŸ‡¶ğŸ‡¦" },
      { value: "Russia", flag: "ğŸ‡·ğŸ‡º" },
      { value: "Saudi Arabia", flag: "ğŸ‡¸ğŸ‡¦" },
      { value: "Singapore", flag: "ğŸ‡¸ğŸ‡¬" },
      { value: "South Korea", flag: "ğŸ‡°ğŸ‡·" },
      { value: "Sri Lanka", flag: "ğŸ‡±ğŸ‡°" },
      { value: "Syria", flag: "ğŸ‡¸ğŸ‡¾" },
      { value: "Tajikistan", flag: "ğŸ‡¹ğŸ‡¯" },
      { value: "Thailand", flag: "ğŸ‡¹ğŸ‡­" },
      { value: "Timor-Leste", flag: "ğŸ‡¹ğŸ‡±" },
      { value: "Turkey", flag: "ğŸ‡¹ğŸ‡·" },
      { value: "Turkmenistan", flag: "ğŸ‡¹ğŸ‡²" },
      { value: "United Arab Emirates", flag: "ğŸ‡¦ğŸ‡ª" },
      { value: "Uzbekistan", flag: "ğŸ‡ºğŸ‡¿" },
      { value: "Vietnam", flag: "ğŸ‡»ğŸ‡³" },
      { value: "Yemen", flag: "ğŸ‡¾ğŸ‡ª" },
    ],
  },

  {
    continent: "Oceania",
    items: [
      { value: "Australia", flag: "ğŸ‡¦ğŸ‡º" },
      { value: "New Zealand", flag: "ğŸ‡³ğŸ‡¿" },
      { value: "Fiji", flag: "ğŸ‡«ğŸ‡¯" },
      { value: "Papua New Guinea", flag: "ğŸ‡µğŸ‡¬" },
      { value: "Solomon Islands", flag: "ğŸ‡¸ğŸ‡§" },
      { value: "Vanuatu", flag: "ğŸ‡»ğŸ‡º" },
      { value: "Samoa", flag: "ğŸ‡¼ğŸ‡¸" },
      { value: "Tonga", flag: "ğŸ‡¹ğŸ‡´" },
      { value: "Kiribati", flag: "ğŸ‡°ğŸ‡®" },
      { value: "Marshall Islands", flag: "ğŸ‡²ğŸ‡­" },
      { value: "Palau", flag: "ğŸ‡µğŸ‡¼" },
      { value: "Nauru", flag: "ğŸ‡³ğŸ‡·" },
      { value: "Tuvalu", flag: "ğŸ‡¹ğŸ‡»" },
      { value: "Federated States of Micronesia", flag: "ğŸ‡«ğŸ‡²" },
    ],
  },
];

type Props = {
  name: string;
};
export default function CountrySelectList(props: Props) {
  const [open, setOpen] = useState<boolean>(false);
  const [value, setValue] = useState<string>("");

  return (
    <div className="space-y-2">
      {/* we've created this dom because form can not access to the useState hooks value */}
      <input className="hidden" value={value} name={props.name} />
      <Popover open={open} onOpenChange={setOpen}>
        <PopoverTrigger asChild>
          <Button
            id="select-44"
            variant="outline"
            role="combobox"
            aria-expanded={open}
            className="w-full justify-between bg-background px-3 font-normal outline-offset-0 hover:bg-background focus-visible:border-ring focus-visible:outline-[3px] focus-visible:outline-ring/20"
          >
            {value ? (
              <span className="flex min-w-0 items-center gap-2">
                <span className="text-lg leading-none">
                  {
                    countries
                      .map((group) =>
                        group.items.find((item) => item.value === value),
                      )
                      .filter(Boolean)[0]?.flag
                  }
                </span>
                <span className="truncate">{value}</span>
              </span>
            ) : (
              <span className="text-muted-foreground">Select country</span>
            )}
            <ChevronDown
              size={16}
              strokeWidth={2}
              className="shrink-0 text-muted-foreground/80"
              aria-hidden="true"
            />
          </Button>
        </PopoverTrigger>
        <PopoverContent
          className="w-full min-w-[var(--radix-popper-anchor-width)] border-input p-0"
          align="start"
        >
          <Command>
            <CommandInput placeholder="Search country..." />
            <CommandList>
              <CommandEmpty>No country found.</CommandEmpty>
              {countries.map((group) => (
                <Fragment key={group.continent}>
                  <CommandGroup heading={group.continent}>
                    {group.items.map((country) => (
                      <CommandItem
                        key={country.value}
                        value={country.value}
                        onSelect={(currentValue) => {
                          setValue(currentValue);
                          setOpen(false);
                        }}
                      >
                        <span className="text-lg leading-none">
                          {country.flag}
                        </span>{" "}
                        {country.value}
                        {value === country.value && (
                          <Check
                            size={16}
                            strokeWidth={2}
                            className="ml-auto"
                          />
                        )}
                      </CommandItem>
                    ))}
                  </CommandGroup>
                </Fragment>
              ))}
            </CommandList>
          </Command>
        </PopoverContent>
      </Popover>
    </div>
  );
}
